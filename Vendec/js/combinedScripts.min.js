// Function to initialize GSAP animations
function initGSAP() {
    document.addEventListener("DOMContentLoaded",(function(){let burger=document.getElementById("burger");let overlay=document.querySelector("section");let heroImage=document.querySelector(".hero-image");let showMenu=false;let del=3;let i=1;const frameDealy=3;let tl=gsap.timeline({repeat:-1,yoyo:true,ease:"expo.out"});overlay.style.display="none";burger.addEventListener("click",(e=>{showMenu=!showMenu;if(showMenu){burger.classList.add("active");overlay.style.display="block";gsap.to(overlay,.65,{clipPath:"polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)",ease:"expo.in"})}else{burger.classList.remove("active");gsap.to(overlay,.65,{clipPath:"polygon(100% 0%, 100% 0%, 100% 100%, 100% 100%)",ease:"expo.out",onComplete:()=>overlay.style.display="none"})}}));gsap.set(["#hero-1 h2, #hero-1 h1"],{clipPath:"polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)"});gsap.set([`#hero-2 h2, #hero-3 h2, #hero-4 h2, #hero-5 h2,\n        #hero-2 h1, #hero-3 h1, #hero-4 h1, #hero-5 h1`],{clipPath:"polygon(0% 0%, 0% 0%, 0% 100%, 0% 100%)"});while(i<5){tl.to(`#hero-${i} h2`,.9,{clipPath:"polygon(0% 0%, 0% 0%, 0% 100%, 0% 100%)",delay:3}).to(`#hero-${i} h1`,.9,{clipPath:"polygon(0% 0%, 0% 0%, 0% 100%, 0% 100%)"},"-=0.3").to(`#hero-${i} h2`,.9,{clipPath:"polygon(0% 0%, 0% 0%, 0% 100%, 0% 100%)"},"-=0.3").to(`#hero-${i} .hi-${i}`,.7,{clipPath:"polygon(0% 0%, 0% 0%, 0% 100%, 0% 100%)"},"-=1").to(`#hero-${i+1} h2`,.9,{clipPath:"polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)"}).to(`#hero-${i+1} h1`,.9,{clipPath:"polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)"},"-=0.3").to(`#hero-${i+1} h2`,.9,{clipPath:"polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)"},"-=0.3");i++}}));document.addEventListener("DOMContentLoaded",(function(){const recentDiv=document.querySelector(".recent");const showRecentDiv=()=>{const rect=recentDiv.getBoundingClientRect();const windowHeight=window.innerHeight||document.documentElement.clientHeight;const triggerPosition=100;if(rect.top<=windowHeight-triggerPosition){recentDiv.classList.add("visible")}else{recentDiv.classList.remove("visible")}};window.addEventListener("scroll",showRecentDiv)}));document.addEventListener("DOMContentLoaded",(function(){const projektyLink=document.getElementById("projekty-link");const sublinks=document.querySelector(".sublinks");projektyLink.addEventListener("click",(function(event){event.preventDefault();sublinks.classList.toggle("open")}))}));
  }
  
  // Function to destroy GSAP animations or set elements to their final animated state
  function destroyGSAP() {
    // Code to reset or stop GSAP animations
    // ...
  }
  
  // Function to handle media changes
  function handleMediaChange(event) {
    if (event.matches) {
      initGSAP();
    } else {
      destroyGSAP();
    }
  }
  
  // Function to handle burger menu, scroll events, etc. which should work on all devices
  function handleGeneralJS() {
    document.addEventListener("DOMContentLoaded", function() {
        let burger = document.getElementById("burger");
        let overlay = document.querySelector("section");
        let showMenu = false;
    
        overlay.style.display = "none";
    
        $('.testimonials-carousel').slick({
            dots: true,
            infinite: true,
            speed: 300,
            slidesToShow: 1,
        });
    
        burger.addEventListener("click", function(e) {
            showMenu = !showMenu;
            if (showMenu) {
                burger.classList.add("active");
                overlay.style.display = "block";
                gsap.to(overlay, .65, {
                    clipPath: "polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)",
                    ease: "expo.in"
                });
            } else {
                burger.classList.remove("active");
                gsap.to(overlay, .65, {
                    clipPath: "polygon(100% 0%, 100% 0%, 100% 100%, 100% 100%)",
                    ease: "expo.out",
                    onComplete: () => overlay.style.display = "none"
                });
            }
        });
    
        const recentDiv = document.querySelector(".recent");
        if (recentDiv) {
            const showRecentDiv = () => {
                const rect = recentDiv.getBoundingClientRect();
                const windowHeight = window.innerHeight || document.documentElement.clientHeight;
                const triggerPosition = 100;
                if (rect.top <= windowHeight - triggerPosition) {
                    recentDiv.classList.add("visible");
                } else {
                    recentDiv.classList.remove("visible");
                }
            };
            window.addEventListener("scroll", showRecentDiv);
        }
    
        const projektyLink = document.getElementById("projekty-link");
        const sublinks = document.querySelector(".sublinks");
        projektyLink.addEventListener("click", function(event) {
            event.preventDefault();
            sublinks.classList.toggle("open");
        });
    
        $('.photo-wrapper img').on('click', function() {
            var modal = $(this).siblings('.carousel-modal');
            modal.css('display', 'flex');
            
            var carouselContainer = modal.find('.carousel-container');
        
            if (!carouselContainer.hasClass('slick-initialized')) {
                carouselContainer.slick({
                    dots: true,
                    infinite: true,
                    speed: 300,
                    slidesToShow: 1,
                    adaptiveHeight: true
                });
            }
        });
        
        $(document).on('click', function(event) {
            // If the clicked target is not within a carousel-container and is outside the modal
            if (!$(event.target).closest('.carousel-container').length && !$(event.target).closest('.photo-wrapper img').length) {
                // Unslick and hide all modal carousels
                $('.carousel-modal .carousel-container.slick-initialized').slick('unslick');
                $('.carousel-modal').css('display', 'none');
            }
        });
    });
document.getElementById("emailForm").addEventListener("submit",(async function(e){console.log("Form submitted");e.preventDefault();const formData={email:e.target.email.value,subject:e.target.subject.value,text:e.target.text.value,name:e.target.name.value,lastName:e.target.lastName.value,tel:e.target.tel.value,email:e.target.email.value};const serverUrl="http://localhost:3000/emails/send";try{const response=await fetch(serverUrl,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(formData)});if(response.ok){const result=await response.json();console.log(result);alert("Email sent successfully!")}else{alert("Error sending email. Please try again.")}}catch(error){console.error("There was an error:",error);alert("There was an error sending the email. Please try again.")}}));

  }
  
  // Initialize general JS functions that should work on all devices
  handleGeneralJS();
  
  // Listen for hover capability changes
  const mediaQuery = window.matchMedia('(hover: hover)');
  mediaQuery.addListener(handleMediaChange);
  
  // Initial check for hover capability
  handleMediaChange(mediaQuery);
  